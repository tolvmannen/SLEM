Description: VPC-Router. The instance-id from this template can be configured in the VPC as a gateway to reach internet from the private-networks (so tcpdump and similar can be used)
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  VPCStackName:
    Description: Name of the VPC stack to deploy into.
    Type: String
    ConstraintDescription: Must be a name of an existing stack
Conditions:
  Ipv4PoolIsBYOIP: !Equals [ !Ref Ipv4Pool, 2]
Mappings:
  RegionMap:
    us-east-1:
      AMI: ami-0dba2cb6798deb6d8
    us-west-1:
      AMI: ami-021809d9177640a20
    eu-west-1:
      AMI: ami-06fd8a495a537da8b
    eu-north-1:
      AMI: ami-008dea09a148cea39
    eu-central-1:
      AMI: ami-0c960b947cbb2dd16
    ap-southeast-1:
      AMI: ami-093da183b859d5a4b
    ap-northeast-1:
      AMI: ami-09b86f9709b3c33d4
Resources:
  MyEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !FindInMap
        - RegionMap
        - !Ref 'AWS::Region'
        - AMI
      InstanceType: t3.micro
      KeyName: !Ref 'KeyName'
      SubnetId:
        Fn::ImportValue:
          Fn::Sub: "${VPCStackName}-PuSID"
      GroupSet:
        - Fn::ImportValue:
            Fn::Sub: "${VPCStackName}-VPCSGID"
        - Fn::ImportValue:
            Fn::Sub: "${VPCStackName}-DNSSGID"
        - Fn::ImportValue:
            Fn::Sub: "${VPCStackName}-MailSGID"
        - Fn::ImportValue:
            Fn::Sub: "${VPCStackName}-WebbSGID"
      # Disable sourcedestcheck
      SourceDestCheck: false
      Tags:
        - Key: Role
          Value: Proxy
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          # This is just a bash-script that the instance runs on boot.
          echo "1" > /proc/sys/net/ip_forward
          # Very generic iptables nat-rule. Anything this box forwards from a 10/8 ip should be NAT'ed to whatever IP this box has.
          iptables -t nat -A POSTROUTING -s 10.0.0.0/16 -j MASQUERADE
